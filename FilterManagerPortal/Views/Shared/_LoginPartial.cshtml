@using Microsoft.AspNetCore.Identity
@using FilterManagerPortal.Areas.Identity.Data

@inject SignInManager<FimaUser> SignInManager
@inject UserManager<FimaUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item" style="padding: 10px">
            <a id="manage" class="btn btn-outline-success" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Greetings @UserManager.GetUserName(User)!</a>
    </li>
    
        <li class="nav-item" style="padding: 10px">
            <a class="btn btn-outline-success" asp-area="" asp-controller="Start" asp-action="FilterList">Manage filters</a>
    </li>
        <li class="nav-item"style="padding: 10px">
            <a class="btn btn-outline-success" asp-area="" asp-controller="Start" asp-action="EmailSettingsList">Notification settings</a>
    </li>

    
    var user = await UserManager.GetUserAsync(User);

    if (user.IsUserAdmin)
    {
            <li class="nav-item"style="padding: 10px">
          <a class="btn btn-outline-success" asp-area="" asp-controller="Start" asp-action="AdminPage">Admin page</a>
    </li>
    }

        <li class="nav-item"style="padding: 10px">
          <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Start", "Start", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-outline-warning">Logout</button>
          </form>
    </li>
}
else
{
        <li class="nav-item" style="padding: 10px">
        <a class="btn btn-outline-success"  id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
        <li class="nav-item" style="padding: 10px">
        <a class="btn btn-outline-success" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
